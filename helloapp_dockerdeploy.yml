 # Ansible playbook to deploy helloApp as a docker container

---

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:
    - name: Install epel-release if not present
      yum: 
        name: epel-release
        state: latest

    - name: Update all installed yum packages
      yum: 
        name: '*'
        state: latest

    - name: Install required packages
      yum: 
        name: 
          - docker
          - git
          - python-pip
          - nginx
        state: latest

    - name: Install docker-py package via pip
      pip:
        name: docker-py

    - name: Start docker service
      service:
        name: docker
        state: started

    - name: Start nginx
      service:
        name: nginx
        state: started


    # Disable SELinux
    - selinux:
        state: disabled

     # centos6.X
    - name: Stop iptables
      service: 
        name: iptables 
        state: stopped
      ignore_errors: yes

    # centos7.X
    - name: Stop firewalld
      systemd: 
        name: firewalld 
        state: stopped
      ignore_errors: yes


    - name: Set git http.sslVerify to false
      command: git config --global http.sslVerify false
      register: result
      
- hosts: webserver
  tasks:
    - name: Clone repo https://github.com/{{github_user}}/{{app_name}}.git
      git:
        repo: 'https://github.com/{{github_user}}/{{app_name}}.git'
        dest: /home/{{ssh_user}}/{{app_name}}
        force: yes
        update: yes

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:

    - name: Build Docker image {{app_name}} from Dockerfile
      docker_image:
        name: '{{app_name}}'
        path: /home/{{ssh_user}}/{{app_name}}
        state: build

    - name: Run the container {{app_name}}
      docker_container:
        name: '{{app_name}}'
        image: '{{app_name}}'
        state: started
        published_ports: "8000:5000"

    - name: Creates directory /etc/nginx/sites-available/
      file:
        path: /etc/nginx/sites-available/
        state: directory     
        mode: 0755

    - name: Configure nginx as reverse_proxy to {{app_name}} container 
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.conf /etc/nginx/sites-available/
      register: result

    
    - name: Remove old default.conf
      file: 
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Remove old nginx.conf file
      file: 
        path: /etc/nginx/nginx.conf
        state: absent

    - name: Creating new nginx.conf file
      command: cp /home/{{ssh_user}}/{{app_name}}/nginx.conf /etc/nginx/nginx.conf
      register: result


    - name: Create symbolic link from {{app_name}}.conf /etc/nginx/sites-enabled/default 
      file:
        src: /etc/nginx/sites-available/{{app_name}}.conf
        dest: /etc/nginx/conf.d/default.conf
        state: link
        force: yes
    
    - name: Restart nginx service cento6
      service:
        name: nginx 
        state: restarted 
        enabled: yes
      ignore_errors: yes

    - name: Restart nginx service centos7
      systemd: 
        name: nginx 
        state: restarted
      ignore_errors: yes