# Ansible playbook to deploy helloApp as a docker container

---

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:

    - name: Install epel-release and wget if not present
      yum: 
        name: 
          - epel-release
          - wget
        state: latest

    - name: "Get docker-ce repository and add to yum repos"
      command: sudo wget -nv https://download.docker.com/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo
      register: result

    - name: Update all installed yum packages
      yum: 
        name: '*'
        state: latest

    - name: Install required packages
      yum: 
        name: 
          - gcc
          - python-pip
          - nginx
          - docker-ce
        state: latest


    - name: Install docker-py package via pip
      pip:
        name: docker-py

    
    - name: Start docker service
      systemd: 
        name: docker 
        state: started
      ignore_errors: yes

    - name: Start nginx service
      systemd: 
        name: nginx 
        state: started
      ignore_errors: yes


    - selinux:
        state: disabled

    - name: setenforce
      shell: setenforce 0


    - name: Stop firewalld
      systemd: 
        name: firewalld 
        state: stopped
      ignore_errors: yes
      
- hosts: webserver
  tasks:

    - name: Create {{app_name}} dir in /home/{{ssh_user}}
      file:
        path: /home/{{ssh_user}}/{{app_name}}
        state: directory
        mode: '0755'

    - name: Copy src files to /home/{{ssh_user}}/{{app_name}}
      copy:
        src: /Users/pandrade/Documents/GitHub/flask-deploy/src/
        dest: /home/{{ssh_user}}/{{app_name}}/

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:

    - name: Build Docker image {{app_name}} from Dockerfile
      docker_image:
        name: '{{app_name}}'
        path: /home/{{ssh_user}}/{{app_name}}/app
        state: build

    - name: Build Docker image prometheus_local from Dockerfile
      docker_image:
        name: prometheus_local
        path: /home/{{ssh_user}}/{{app_name}}/prom
        state: build

    - name: Run the container {{app_name}}
      docker_container:
        name: '{{app_name}}1'
        image: '{{app_name}}'
        state: started
        published_ports: "9000:5000"

    - name: Run the container {{app_name}}
      docker_container:
        name: '{{app_name}}2'
        image: '{{app_name}}'
        state: started
        published_ports: "9001:5000"

    - name: Run the container prometheus
      docker_container:
        name: prometheus
        image: prometheus_local
        state: started
        published_ports: "9090:9090"

        
    - name: Creates directory /etc/nginx/sites-available/
      file:
        path: /etc/nginx/sites-available/
        state: directory     
        mode: 0755

    - name: Configure nginx as a LB to the 2 {{app_name}} containers
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.conf /etc/nginx/sites-available/
      register: result

    
    - name: Remove old default.conf
      file: 
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Remove old nginx.conf file
      file: 
        path: /etc/nginx/nginx.conf
        state: absent

    - name: Creating new nginx.conf file
      command: cp /home/{{ssh_user}}/{{app_name}}/nginx.conf /etc/nginx/nginx.conf
      register: result


    - name: Create symbolic link from {{app_name}}.conf /etc/nginx/sites-enabled/default 
      file:
        src: /etc/nginx/sites-available/{{app_name}}.conf
        dest: /etc/nginx/conf.d/default.conf
        state: link
        force: yes
    
    # centos7.X
    - name: Restart nginx service
      systemd: 
        name: nginx 
        state: restarted
      ignore_errors: yes
