# Ansible playbook to deploy helloApp in cento6

---

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:
    - name: Disable apache if present
      yum:
        name: httpd
        state: absent

    # yum update -y
    - name: upgrade all packages
      yum: 
        name: '*'
        state: latest 

    - name: Install packages gcc, ntp, nginx, git, tree, python-pip, python-virtualenv
      yum:
        name:
          - gcc
          - ntp
          - nginx
          - tree   
          - git      
          - python-pip   
          - python-virtualenv
        state: present
    

    - name: Start nginx
      service:
        name: nginx
        state: started


    # Disable SELinux
    - selinux:
        state: disabled

    - name: Stop iptables
      service: 
        name: iptables 
        state: stopped

    - name: config get http.sslVerify
      command: git config --global http.sslVerify false
      register: result


- hosts: webserver
  tasks:
    - name: Clone repo
      git:
        repo: 'https://github.com/{{github_user}}/{{app_name}}.git'
        dest: /home/{{ssh_user}}/{{app_name}}
        force: yes
        update: yes

    - name: Install flask and gunicron modules in virtualenv
      pip:
        requirements: /home/{{ssh_user}}/{{app_name}}/requirements.txt
        virtualenv: /home/{{ssh_user}}/{{app_name}}/venv

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:
    - name: Creates directory /etc/nginx/sites-available/
      file:
        path: /etc/nginx/sites-available/
        state: directory     
        mode: 0755

    - name: config nginx
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.conf /etc/nginx/sites-available/
      register: result

    - name: Remove default nginx site config
      file: 
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Create symbolic link from helloapp.conf /etc/nginx/sites-enabled/default 
      file:
        src: /etc/nginx/sites-available/{{app_name}}.conf
        dest: /etc/nginx/conf.d/default.conf
        state: link
        force: yes
    
    - name: Restart nginx service
      service:
        name: nginx 
        state: restarted 
        enabled: yes

    - name: config init script
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.init /etc/init.d/{{app_name}}
      register: result

    - name: setting permissions of file helloapp
      file:
        path: /etc/init.d/{{app_name}}
        mode: 0755

    - name: Making helloapp persistent across reboots
      command: chkconfig --add {{app_name}}
      register: result

    - name: Start helloapp
      service:
        name: '{{app_name}}'
        state: restarted

    

  

  