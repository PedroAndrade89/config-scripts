# Ansible playbook to deploy helloApp in cento6.X/7.X

---

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:

    - name: Disable Apache http if present
      yum:
        name: httpd
        state: absent


    - name: Install epel-release if not present
      yum: 
        name: epel-release
        state: latest

    - name: Upgrade all yum packages
      yum: 
        name: '*'
        state: latest 

    - name: Install packages gcc, ntp, nginx, python-pip, python-virtualenv
      yum:
        name:
          - gcc
          - ntp
          - nginx  
          - python-pip   
          - python-virtualenv
        state: present
    

    - name: Start nginx 
      systemd:
        name: nginx
        state: started
      ignore_errors: yes


    # Disable SELinux
    - selinux:
        state: disabled


    - name: Stop iptables centos6
      service: 
        name: iptables 
        state: stopped
      ignore_errors: yes


    - name: Stop firewalld centos7
      systemd: 
        name: firewalld 
        state: stopped
      ignore_errors: yes


- hosts: webserver
  tasks:

    - name: Create {{app_name}} dir in /home/{{ssh_user}}
      file:
        path: /home/{{ssh_user}}/{{app_name}}
        state: directory
        mode: '0755'

    - name: Copy src files to /home/{{ssh_user}}/{{app_name}}
      copy:
        src: /Users/pandrade/Documents/GitHub/flask-deploy/src/
        dest: /home/{{ssh_user}}/{{app_name}}

    - name: Install flask and gunicorn modules in virtualenv
      pip:
        requirements: /home/{{ssh_user}}/{{app_name}}/requirements.txt
        virtualenv: /home/{{ssh_user}}/{{app_name}}/venv

- hosts: webserver
  become: yes
  become_method: sudo
  tasks:
    

    - name: Config {{app_name}} upstart script
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.init /etc/init.d/{{app_name}}
      register: result

    - name: Setting permissions of file /etc/init.d/{{app_name}}
      file:
        path: /etc/init.d/{{app_name}}
        mode: 0755

    - replace:
        path: /etc/init.d/{{app_name}}
        regexp: 'APPLICATION_NAME=application'
        replace: 'APPLICATION_NAME={{app_name}}'


    - replace:
        path: /etc/init.d/{{app_name}}
        regexp: 'SSH_USER=user'
        replace: 'SSH_USER={{ssh_user}}'


    - name: Making {{app_name}} persistent across reboots
      command: chkconfig --add {{app_name}}
      register: result

     # centos6.X
    - name: Stop {{app_name}} if already installed
      service: 
        name: '{{app_name}}'
        state: stopped
      ignore_errors: yes

    - name: Start {{app_name}}
      service:
        name: '{{app_name}}'
        state: restarted

    - name: Creates directory /etc/nginx/sites-available/
      file:
        path: /etc/nginx/sites-available/
        state: directory     
        mode: 0755

    - name: Configure nginx as reverse_proxy to {{app_name}} 
      command: cp /home/{{ssh_user}}/{{app_name}}/{{app_name}}.conf /etc/nginx/sites-available/
      register: result

    
    - name: Remove old nginx default.conf file
      file: 
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Remove old nginx.conf file
      file: 
        path: /etc/nginx/nginx.conf
        state: absent

    - name: Creating new nginx.conf file
      command: cp /home/{{ssh_user}}/{{app_name}}/nginx.conf /etc/nginx/nginx.conf
      register: result


    - name: Create symbolic link from {{app_name}}.conf /etc/nginx/sites-enabled/default 
      file:
        src: /etc/nginx/sites-available/{{app_name}}.conf
        dest: /etc/nginx/conf.d/default.conf
        state: link
        force: yes

    - name: Restart nginx service
      systemd: 
        name: nginx 
        state: restarted
      ignore_errors: yes
